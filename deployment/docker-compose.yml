version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14.9
    container_name: ai-agent-postgres
    environment:
      POSTGRES_DB: aiagent
      POSTGRES_USER: aiagentadmin
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-YourSecurePassword123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiagentadmin -d aiagent"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Storage (optional)
  redis:
    image: redis:7-alpine
    container_name: ai-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Agent Application
  app:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: ai-agent-app
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://aiagentadmin:${DATABASE_PASSWORD:-YourSecurePassword123!}@postgres:5432/aiagent
      REDIS_URL: redis://redis:6379
      AWS_REGION: ${AWS_REGION:-us-east-1}
      # AI API Keys (set these in .env file)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      SESSION_SECRET: ${SESSION_SECRET}
      # AWS Credentials (if not using IAM roles)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - app_logs:/var/log/ai-agent
      - ../:/opt/ai-agent
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-agent-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16